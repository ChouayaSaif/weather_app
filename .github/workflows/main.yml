name: CI/CD Pipeline for Dockerized Django App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy Dockerized Django App
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: weather_db_1
          MYSQL_USER: user
          MYSQL_PASSWORD: saifch
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=20

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Docker Compose
        run: |
          docker-compose --version

      - name: Start MySQL Container
        run: |
          docker-compose up -d db

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to start..."
          timeout 120 bash -c 'while ! docker-compose exec db mysqladmin ping -u"user" -p"saifch" --silent; do
            sleep 5
          done'
          echo "MySQL is ready!"

      - name: Build Application Docker Image
        run: |
          docker-compose build django-app

      - name: Run Migrations
        run: |
          docker-compose run django-app python manage.py migrate

      - name: Run Tests (Optional)
        run: |
          docker-compose run django-app python manage.py test

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag my-weather-app-base ${{ secrets.DOCKER_USERNAME }}/django-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/django-app:latest

      - name: Deploy Application (Optional Step)
        run: |
          echo "Deployment steps go here. For example, SSH into the server and deploy the app."